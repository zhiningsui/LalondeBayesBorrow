% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_gen.R
\name{data_gen_gscore}
\alias{data_gen_gscore}
\title{Generate g-scores}
\usage{
data_gen_gscore(
  n_arms = 2,
  nsim = 10,
  n_list = NULL,
  prob_list = NULL,
  mu_list = NULL,
  sigma_list = NULL,
  arm_names = NULL
)
}
\arguments{
\item{n_arms}{A scalar. Number of arms to be generated.}

\item{nsim}{A scalar. Number of repetitions for the simulation.}

\item{n_list}{A named vector. Each element represents the number of patients in each arm.}

\item{prob_list}{A named vector. Each element represents the probability of a g-score being zero in each arm.}

\item{mu_list}{A named vector. Each element represents the mean of the normal distribution for generating the log of positive g-scores in each arm.}

\item{sigma_list}{A named vector. Each element represents the standard deviation of the normal distribution for generating the log of positive g-scores in each arm.}

\item{arm_names}{A named vector. Each element represents the name of each arm.}
}
\value{
A list of data frames:
  - \code{data}: A data frame containing individual-level g-scores for all arms and all repetitions of the simulation.
  - \code{true_value}: A data frame with the true medians for all arms and the true median ratio for treatment vs. control (if both are present).
  - \code{median_est}: A data frame with adjusted median estimates for each arm, along with the variance estimators for the median estimates.
}
\description{
This function generates g-scores for multiple arms of a study across multiple simulation repetitions.
It simulates individual-level g-scores for each arm based on specified probabilities, means,
and standard deviations for the g-score distributions. The function outputs true median values
and adjusted median estimates along with their variance.
}
\examples{
# Example of generating g-scores for a study with 2 arms, 100 patients in each arm,
# and 10 simulation repetitions:
n_list <- c(treatment = 100, control = 100)
prob_list <- c(treatment = 0.2, control = 0.3)
mu_list <- c(treatment = 0.5, control = 0.6)
sigma_list <- c(treatment = 0.1, control = 0.2)
arm_names <- c(treatment = "treatment", control = "control")
sim_data_gscore <- data_gen_gscore(n_arms = 2, nsim = 10, n_list = n_list,
                                   prob_list = prob_list, mu_list = mu_list,
                                   sigma_list = sigma_list, arm_names = arm_names)

}
