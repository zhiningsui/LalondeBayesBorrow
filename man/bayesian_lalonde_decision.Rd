% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bayesian_lalonde_decision.R
\name{bayesian_lalonde_decision}
\alias{bayesian_lalonde_decision}
\title{Bayesian Lalonde Decision Framework}
\usage{
bayesian_lalonde_decision(
  endpoint,
  data_summary,
  prior_params,
  lrv = 0,
  tv = 0,
  fgr = 0.2,
  fsr = 0.1,
  arm_names,
  posterior_infer = TRUE,
  Lalonde_decision = TRUE,
  EXP_TRANSFORM = FALSE
)
}
\arguments{
\item{endpoint}{A string. Type of endpoint ("continuous" or "binary").}

\item{data_summary}{A data frame. Summary of the individual-level data. For continuous endpoints, each row represents the number of patients, the mean of the normal distribution, and the standard deviation of the normal distribution for one arm in one simulation repetition. For binary endpoints, each row represents the number of patients and the number of responses for one arm in one repetition of the simulation.}

\item{prior_params}{A list. Prior distribution parameters for both the treatment and control arms. It should include delta, w, a, and b values for both arms.}

\item{lrv}{A scalar. The lower reference value for decision-making.}

\item{tv}{A scalar. The target value for decision-making.}

\item{fgr}{A scalar. False go rate for decision-making.}

\item{fsr}{A scalar. False stop rate for decision-making.}

\item{arm_names}{A list. Names of the arms in the simulation (e.g., treatment, control, etc.).}

\item{posterior_infer}{A logical. If TRUE, the function computes posterior inference for credible intervals and posterior probabilities.}

\item{Lalonde_decision}{A logical. If TRUE, the function makes decisions based on the Lalonde framework.}

\item{EXP_TRANSFORM}{A logical. If TRUE, the function exponentiates the results, which is useful for log-transformed data.}
}
\value{
A list. The output includes:
  - `post_params`: A data frame containing the posterior distribution parameters for each arm.
  - `post_est_ci`: A data frame containing evaluating metrics for the posterior distribution.
  - `post_inference`: A data frame containing the posterior probabilities and credible interval, and the decisions based on the Lalonde framework.
}
\description{
This function implements a Bayesian decision-making framework based on the Lalonde criteria.
It calculates posterior distributions for each arm and evaluates posterior inference and decision criteria based on the given endpoint type (continuous or binary).
}
\examples{
# Example with a continuous endpoint:
data_summary <- data.frame(nsim = 1:10,
                           treatment.n = 50, control.n = 50, control_h.n = 200,
                           treatment.mu_hat = runif(n = 10, 0.3, 0.5),
                           control.mu_hat = runif(n = 10, 0.1, 0.5),
                           control_h.mu_hat = -1, treatment.s = 1,
                           control.s = 1, control_h.s = 1)
prior_params <- list(treatment.delta = log(0.85), control.delta = log(0.85),
                     treatment.w = 0, control.w = NULL)
arm_names = list(treatment = "treatment", control = "control", control_h = "control_h")
bayesian_lalonde_decision(endpoint = "continuous", data_summary = data_summary,
                          prior_params = prior_params, arm_names = arm_names,
                          posterior_infer = FALSE, Lalonde_decision = FALSE,
                          EXP_TRANSFORM = TRUE, lrv = 0.8, tv= 0.5, fgr = 0.2, fsr = 0.1)

# Example with a binary endpoint:
data_summary <- data.frame(nsim = 1:10,
                           treatment.n = 50, control.n = 50, control_h.n = 200,
                           treatment.count = rbinom(10, 50, 0.5),
                           control.count = rbinom(10, 50, 0.2),
                           control_h.count = rbinom(10, 200, 0.3))
prior_params <- list(treatment.delta = 0.1, control.delta = 0.1,
                     treatment.a = 1, treatment.b = 1, control.a = 1, control.b = 1,
                     treatment.w = 0, control.w = NULL)
arm_names = list(treatment = "treatment", control = "control", control_h = "control_h")
bayesian_lalonde_decision(endpoint = "binary", data_summary = data_summary,
                          prior_params = prior_params, arm_names = arm_names,
                          posterior_infer = FALSE, Lalonde_decision = FALSE,
                          EXP_TRANSFORM = TRUE, lrv = 0.1, tv = 0.2, fgr = 0.2, fsr = 0.1)

}
