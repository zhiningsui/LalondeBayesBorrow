#' Calculating the posterior probability
#'
#' This function calculates the posterior probability of the point estimate being within certain ranges.
#' If two posterior distributions are provided, the function calculates the posterior probability
#' of the difference between the two distributions falling within a specified range.
#' For single posterior distributions, it computes the probability of the distribution exceeding,
#' being less than, or falling between certain values.
#'
#' @param post1 A RBesT mixture distribution object. Represents the first posterior distribution.
#' @param value A scalar. The threshold or lower bound for the comparison.
#' @param post2 A RBesT mixture distribution object. Optional second posterior distribution object for pairwise comparison. Default is NULL.
#' @param range_type A string. Specifies the type of comparison ("greater", "less", or "between").
#'  - "greater": Computes the probability that the posterior or the difference between post1 and post2 exceeds `value`.
#'  - "less": Computes the probability that the posterior or the difference between post1 and post2 is less than `value`.
#'  - "between": Computes the probability that the posterior or the difference between post1 and post2 lies between `value` and `value2`.
#' @param value2 A scalar. The upper bound for the "between" comparison. Required if `range_type` is "between".
#'
#' @return A numeric value representing the posterior probability of the point estimate being within the specified range.
#' @export
#'
#' @examples
posterior_prob <- function(post1, value, post2 = NULL, range_type = c("greater", "less", "between"), value2 = NULL) {

  if (is.null(post2)) {
    if (range_type == "greater") {
      return(pmix(post1, value, FALSE)) # Pr(post1 > value)
    } else if (range_type == "less") {
      return(pmix(post1, value))
    } else if (range_type == "between") {
      if (is.null(value2)) stop("value2 must be provided for range_type 'between'")
      return(pmix(post1, value2) - pmix(post1, value))
    }
  } else {
    if (range_type == "greater") {
      return(pmixdiff(post1, post2, value, FALSE)) # Pr( post1 - post2 > value)
    } else if (range_type == "less") {
      return(pmixdiff(post1, post2, value)) # Pr( post1 - post2 < value)
    } else if (range_type == "between") {
      if (is.null(value2)) stop("value2 must be provided for range_type 'between'")
      return(pmixdiff(post1, post2, value2) - pmixdiff(post1, post2, value)) # Pr( value2 > post1 - post2 > value)
    }
  }
}
